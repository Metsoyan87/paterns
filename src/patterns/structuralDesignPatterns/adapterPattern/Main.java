package patterns.structuralDesignPatterns.adapterPattern;

//Шаблон адаптера — это структурный шаблон проектирования,
// который позволяет объектам с несовместимыми интерфейсами работать
// вместе путем преобразования интерфейса одного класса в другой.
// Он предоставляет способ обернуть существующий класс новым интерфейсом,
// совместимым с клиентским кодом.В Java шаблон адаптера можно реализовать,
// создав класс, который реализует желаемый целевой интерфейс и
// делегирует вызовы частному экземпляру существующего класса.
//Класс адаптера можно создать либо с помощью наследования (расширяя существующий класс),
// либо с помощью композиции (путем сохранения экземпляра существующего класса в качестве закрытого члена).
//Вот пример реализации шаблона адаптера в Java:

public class Main {
    public static void main(String[] args) {
        Adaptee adaptee = new Adaptee();
        Target target = new Adapter(adaptee);
        target.request();
    }
}


//В этом примере Adaptee класс содержит specificRequest метод,
// который мы хотим использовать повторно. Интерфейс Target определяет request метод,
// который клиент ожидает вызвать. Класс Adapter реализует Target интерфейс и делегирует
// request метод specificRequest методу Adaptee. Класс Main использует Adapter для повторного
// использования specificRequest метода Adaptee.