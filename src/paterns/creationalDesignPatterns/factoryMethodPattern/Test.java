package paterns.creationalDesignPatterns.factoryMethodPattern;

//Фабричный метод — это порождающий шаблон проектирования в Java,
// который предоставляет интерфейс для создания объектов в суперклассе, но позволяет подклассам изменять тип создаваемых объектов.
//Шаблон Factory Method позволяет создавать объекты без указания точного класса объекта,
// который будет создан. Это делается путем создания фабричного метода, который возвращает объект типа, определенного подклассами.
//Фабричный метод можно реализовать с помощью статического метода в суперклассе или путем создания отдельного фабричного класса.
// В любом случае фабричный метод должен возвращать экземпляр создаваемого объекта.


//В этом примере Car интерфейс является суперклассом, SportsCar а Sedan классы и являются подклассами. Класс CarFactory представляет
// собой отдельный фабричный класс, содержащий createCar метод, возвращающий экземпляр соответствующего Car объекта на основе car Type аргумента.
//Чтобы создать Car объект, вы можете вызвать CarFactory.createCar метод и передать тип автомобиля, который хотите создать:

public class Test {
    public static void main(String[] args) {
        Car sportsCar = CarFactory.createCar("sports");
        sportsCar.drive(); // Output: "Driving a sports car!"

        Car sedan = CarFactory.createCar("sedan");
        sedan.drive(); // Output: "Driving a sedan!"
    }
}
